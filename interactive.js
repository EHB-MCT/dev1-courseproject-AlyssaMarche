// Portions of this project were developed using suggestions generated by ChatGPT (OpenAI)
// 04/12/2024:https://chatgpt.com/c/67501a6c-0d28-8007-ba39-675c734bf9b5
// Modifications made by Alyssa Marche (er waren fouten in de chatgpt code)

"use strict";
import context from "../../scripts/context.js";
import * as Utils from "../../scripts/utils.js";

let width = context.canvas.width;
let height = context.canvas.height;

let snow = [];
let snowflakeCount = 100;
let speed = 2;

setup();
animateSnow();



function setup() {
	for (let i = 0; i < snowflakeCount; i++) {
		let snowFlake = {
			x: Math.random() * width,
			y: Math.random() * height,
			speed: Math.random() * 2 + 1,
			size: Math.random() * 5 + 2,
		};
		snow.push(snowFlake);
	}
}

function animateSnow() {
	context.fillStyle = "#0362b5";
	context.fillRect(0, 0, width, height);

	for (let i = 0; i < snow.length; i++) {
		let flake = snow[i];
		flake.y += flake.speed;
		flake.x += Utils.randomNumber(-1, 1);
		if (flake.y > height) {
			flake.y = -flake.size;
			flake.x = Math.random() * width;
		}

		drawSnowflake(flake.x, flake.y, flake.size, 6, 3);
	}
	context.fillStyle = "white";
	context.textAlign = "center";
	context.font = "normal 60pt Arial";
	context.fillText("Merry Christmas", width / 2, height / 2);


	requestAnimationFrame(animateSnow);
}

//generated by chatgpt
// Get the canvas and set up the context
const canvas = document.getElementById("canvas");
const centerX = canvas.width / 2;
const centerY = canvas.height / 2;

// Function to draw a single branch of the snowflake
function drawBranch(x, y, length, angle, depth) {
	if (depth === 0) return;

	const xEnd = x + length * Math.cos(angle);
	const yEnd = y + length * Math.sin(angle);

	// Draw the main branch
	context.beginPath();
	context.moveTo(x, y);
	context.lineTo(xEnd, yEnd);
	context.stroke();

	// Add smaller branches
	const newLength = length * 0.6;
	drawBranch(xEnd, yEnd, newLength, angle - Math.PI / 6, depth - 1); // Left branch
	drawBranch(xEnd, yEnd, newLength, angle + Math.PI / 6, depth - 1); // Right branch
}

// Function to draw the complete snowflake
function drawSnowflake(centerX, centerY, length, branches, depth) {
	context.strokeStyle = "white";
	context.lineWidth = 2;

	for (let i = 0; i < branches; i++) {
		const angle = (i * 2 * Math.PI) / branches;
		drawBranch(centerX, centerY, length, angle, depth);
	}
}

// Draw the snowflake
drawSnowflake(centerX, centerY, 100, 6, 4);
